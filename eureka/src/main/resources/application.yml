eureka:
  client:
    #将自己身注册成为client功能关闭，如果打开的话，启动server会在server管理端看到一个在线的application
    register-with-eureka: false
    #是否检索服务
    fetch-registry: false
    service-url:
      defaultZone: http://localhost:8761/eureka/
  #enreka server有一个健康检查机制，即当发现某一个注册的服务经常都不在线时，就会在
  #注册中心的管理界面抛出警告给运维人员查阅，我们在开发环境可以做如下设置，来关闭警告功能
  #但是生产环境最好保持该功能开启，该功能还能保证实时剔除那些已经死掉的服务
  #在某些情况下，如果死掉的服务不及时停掉，会导致服务A调用服务B时通时不通
  server:
    enable-self-preservation: false

#如何在同一个项目里启动EurekaApplication1和EurekaApplication2呢，首先是在右上角那点击Edit Configuration
#然后在左上角点击copy configuration 然后命名，
#然后选中某一个后制定运行端口，制定运行端口的方法是在右边Configuration-Environment-VM options
#里面填上-Dserver.port=8761,另一个填写成-Dserver.port=8762,如果有多个以此类推
#使两个server互相注册的办法是，先以defaultZone: http://localhost:8762/eureka/的配置运行EurekaApplication1
#然后将defaultZone: http://localhost:8762/eureka/改成defaultZone: http://localhost:8761/eureka/
#之后运行EurekaApplication2
#要是两个服务互相注册需要将下面一句注释掉
#这里设置一下端口用于在命令行启动
server:
  port: 8761
spring:
  application:
    name: eureka
#配置eureka高可用，将上面的所有内容全部注册掉，然后使用如下配置，单机运行或者在rancher上部署，可以将#在开头的行打开
#在命令行可以通过java -jar -Dspring.profiles.active=eureka1 target/eureka-1.0-SNAPSHOT.jar 来指定启动配置
#spring:
#  profiles:
#    active: eureka1
