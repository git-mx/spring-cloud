#注意，将config部署到rancher上之后，由于RancherAgent没有外网地址，所以无法实现配置动态更新推送到具体需要使用配置的服务例如order
spring:
  application:
    name: config
  cloud:
    config:
      server:
        git:
          #GIT远程仓库地址，这里是项目的路径，不是.git
          uri: https://github.com/git-mx/config
          #spring cloud config下载下来的文件保存的本地目录路径,在WINDOWS下要改成G:\config这样的
          basedir: /SrpingCloudConfig
          #git的账号密码
          username: git-mx
          password: mys160712
  #rabbitMQ的配置信息
  rabbitmq:
    #如果在本机，可以这样写
    #host: 127.0.0.1
    #在rancher上，要写成外网地址
    host: 132.232.48.14
    port: 5672
    username: guest
    password: guest
eureka:
  client:
    service-url:
      #本地测试或者一般部署使用如下配置
      #defaultZone: http://localhost:8761/eureka/
      #使用rancher部署，使用以下配置8761:前面那个eureka单词必须要跟rancher里面的服务名称一样
      #defaultZone: http://eureka:8761/eureka/
      #使用rancher部署，如果erueka是多台的
      defaultZone: http://eureka1:8761/eureka/,http://eureka2:8762/eureka/
  #实例在eureka注册中心的跳转地址，如果是外网地址必须要把两个都写上，如果是本地可以都不写
  instance:
    #部署到具体服务器上时
    #ip-address: 132.232.48.14
    #部署到rancher的docker容器时，填写RancherAgent的主机IP地址
    ip-address: 192.168.5.99
    prefer-ip-address: true


#咱们在访问浏览器地址里面访问config配置中心的配置文件有以下几种方式
#1.http://localhost:8080/order-a.yml  --master分支下的order.yml文件 后面的-a可以随便改，例如可以写成-b，但是必须要
#2.http://localhost:8080/order-a.properties --master分支下的会自动转换成porterties格式的文件
#3.http://localhost:8080/order-a.json --master分支下的会自动转换成JSON报文
#4.http://localhost:8080/order-dev.json --master分支下的下载的就是order-dev.yml
#5.http://localhost:8080/release/order-dev.json --release分支下的order-dev.json
#6.打包后部署到docker中去

#下面的配置是把配置中心的/actuator/bus-refresh给暴露出去让github的webhook调用
#就是每次github在检测到有push请求时，就调用这个接口来通知config配置中心，说有push请求，配置文件已经改了
management:
  endpoints:
    web:
      exposure:
        include: ["bus-refresh"]
#使用jar包构建docker一定要加上server.port，并且在创建容器的时候一定要指定成 -p 8081:8081，
#否则docker容器默认启动的是8080端口，因为在本文件不指定端口的话默认就是8080
server:
  port: 8081
